const { build } = require("esbuild");
const fs = require("fs");

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source visit the plugins github repository
*/
`;

const copyManifest = {
  name: "copy-manifest",
  setup: (build) => {
    build.onEnd(() => {
      // 确保build目录存在
      if (!fs.existsSync("build")) {
        fs.mkdirSync("build");
      }
      
      // 复制manifest.json到build目录
      fs.copyFileSync("manifest.json", "build/manifest.json");
      
      // 在开发模式下创建.hotreload文件
      if (!isProd) {
        try {
          fs.writeFileSync("build/.hotreload", "", { flag: "wx" });
        } catch (err) {
          if (err.code !== "EEXIST") throw err;
        }
      }
      
      console.log("构建完成！");
    });
  },
};

const isProd = process.env.BUILD === "production";

(async () => {
  try {
    await build({
      entryPoints: ["src/main.ts"],
      bundle: true,
      watch: !isProd,
      platform: "browser",
      external: ["obsidian"],
      format: "cjs",
      mainFields: ["browser", "module", "main"],
      banner: { js: banner },
      sourcemap: isProd ? false : "inline",
      minify: isProd,
      outfile: "main.js",
      plugins: [copyManifest],
    });
  } catch (err) {
    console.error(err);
    process.exit(1);
  }
})();
